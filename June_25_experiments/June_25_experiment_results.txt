Note1: No.2 3 7 mutation
Note2: synthesis time boundary 30 minutes
Note3: domino grid size 20*10
Note4: verification bit = 29
Note5: 3*(4+1) means 3 stages and (4 stateless_alu + 1 stateful_alu) per stage
                     # of mutators   statelfu_alu stateless_alu     grid_size  success_rate_for_iterative_solver   success_rate_for_domino                  M1  M2  M3  M4  M5  M6  M7  M8  M9  M10

1.RCP(ok)
1.1(optimal one)
rcp.c                10              pred_raw     stateless_alu          3*(3+1)         100%                              100%
(cmd line: time python3 run_iterative_solver_automatically.py rcp 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu.j2 3 3 29
time: real    2m33.985s)ok

1.2
rcp.c                10              pred_raw     stateless_alu_arith          3*(3+1)         100%                              100%
(cmd line: time python3 run_iterative_solver_automatically.py rcp 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu_arith.j2 3 3 29
time: real    2m56.020s)ok

2.STATEFUL_FW(Not Finished)
2.1(Optimal)
stateful_fw.c        10              pred_raw     stateless_alu          4*(5+1)         100%                              90%(file 1 2 3 4 5 7 8 9 10)   15*4 15*4 19*4 15*5 15*4 21*4 15*4 14*4 12*4 14*4
(cmd line: time python3 run_iterative_solver_automatically.py stateful_fw 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu.j2 4 5 29
time: real    )

2.2(time running out but quite possible to get failed)
stateful_fw.c        10              pred_raw     stateless_alu_arith    4*(5+1)         0%                                90%(file 1 2 3 4 5 7 8 9 10)
(cmd line: time python3 run_iterative_solver_automatically.py stateful_fw 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu_arith.j2 4 5 29
time: real    300m25.496s)
Note: for the first mutator, we keep it running without setting timeout boundary, it does not give the compilation result after 15 hours so we just cut it.

3.SAMPLING(ok)
3.1(Optimal)
sampling.c           10              if_else_raw  stateless_alu          2*(1+1)         100%                              0%                                   
(cmd line: time python3 run_iterative_solver_automatically.py sampling 10 example_alus/if_else_raw.stateful_alu stateless_alus/stateless_alu.j2 2 1 29
time: real    1m12.761s)ok

3.1(Optimal)
sampling.c           10              if_else_raw  stateless_alu_arith          2*(1+1)         0%                              0%
(cmd line: time python3 run_iterative_solver_automatically.py sampling 10 example_alus/if_else_raw.stateful_alu stateless_alus/stateless_alu_arith.j2 2 1 29
time: real    0m56.261s)ok

4.BLUE_INCREASE(ok)
4.1(Optimal)
blue_increase.c      10              pred_raw     stateless_alu          4*(2+1)         100%                               0%                                    
(cmd line: time python3 run_iterative_solver_automatically.py blue_increase 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu.j2 4 2 29
time: real    2m17.103s)ok

4.2
blue_increase.c      10              pred_raw     stateless_alu_arith          4*(2+1)         100%                               0%
(cmd line: time python3 run_iterative_solver_automatically.py blue_increase 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu_arith.j2 4 2 29
time: real    2m1.671s)ok

5.BLUE_DECREASE(ok)
5.1(Optimal)
blue_decrease.c      10              sub          stateless_alu         4*(2+1)        100%                                 0%                                  
(cmd line: time python3 run_iterative_solver_automatically.py blue_decrease 10 example_alus/sub.stateful_alu stateless_alus/stateless_alu.j2 4 2 29
time: real    9m57.977s)ok

5.2
blue_decrease.c      10              sub          stateless_alu_arith         4*(2+1)        100%                                 0%
(cmd line: time python3 run_iterative_solver_automatically.py blue_decrease 10 example_alus/sub.stateful_alu stateless_alus/stateless_alu_arith.j2 4 2 29
time: real    2m37.729s)ok

6.FLOWLETS(Not Finished)
6.1
flowlets.c           10              pred_raw     stateless_alu         4*(5+1)         90%(file 1 2 4 5 6 7 8 9 10)        100%                                9*4 9*4 8*4 9*4 9*4 7*4 7*4 8*4 9*4 8*4
(cmd line: time python3 run_iterative_solver_automatically.py flowlets 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu.j2 4 5 29
time: real   run for three times around 230m40s  159m58.152s  156m50.783s)ok
Note: I run this experiment for three times and two of them get 100% successful compilation rate while the rest get 90% successful compilation rate

6.2(time running out but quite possible to get failed)
flowlets.c           10              pred_raw     stateless_alu_arith   4*(5+1)         0%                                  100%
(cmd line: time python3 run_iterative_solver_automatically.py flowlets 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu_arith.j2 4 5 29
time: real    300m26.968s)ok

7.MARPLE_NEW_FLOW(ok)
7.1(Optimal)
marple_new_flow.c    10              pred_raw     stateless_alu         2*(2+1)         100%                                0%
(cmd line: time python3 run_iterative_solver_automatically.py marple_new_flow 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu.j2 2 2 29
time: real    1m15.105s)ok

7.2
marple_new_flow.c    10              pred_raw     stateless_alu_arith   2*(2+1)         0%                                0%
(cmd line: time python3 run_iterative_solver_automatically.py marple_new_flow 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu_arith.j2 2 2 29
time: real    0m56.638s)ok

8.MARPLE_TCP_NMO(ok)
8.1(Optimal)
marple_tcp_nmo.c     10              pred_raw     stateless_alu         3*(2+1)         100%                                0%                             
(cmd line: time python3 run_iterative_solver_automatically.py marple_tcp_nmo 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu.j2 3 2 29
time: real    1m27.977s)ok

8.2(Optimal)
marple_tcp_nmo.c     10              pred_raw     stateless_alu_arith         3*(2+1)         100%                                0%
(cmd line: time python3 run_iterative_solver_automatically.py marple_tcp_nmo 10 example_alus/pred_raw.stateful_alu stateless_alus/stateless_alu_arith.j2 3 2 29
time: real    1m22.410s)ok
