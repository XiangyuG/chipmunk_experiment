/* 
// Original program: 
/* 
// Original program: 
// Sample every 30th packet in a flow
#define N 30

struct Packet {
  int sample;
};

int count = 0;

void func(struct Packet pkt) {
  if (count == N - 1) {
    pkt.sample = 1;
    count = 0;
  } else {
    pkt.sample = 0;
    count = count + 1;
  }
}
 */

struct Packet{
    int pkt_0;
};
int state_0 = 0;
void func(struct Packet p) {
if (state_0==30-1) {p.pkt_0=1;
state_0=0;
;}else {p.pkt_0=0;
state_0=state_0+1;
;}

}
 */

|StateAndPacket| program (|StateAndPacket| state_and_packet) {
if (state_and_packet.state_0==30-1) {state_and_packet.pkt_0=1;
state_and_packet.state_0=0;

;}else {state_and_packet.pkt_0=0;
state_and_packet.state_0=state_and_packet.state_0+1;

;}
  return state_and_packet;
}
