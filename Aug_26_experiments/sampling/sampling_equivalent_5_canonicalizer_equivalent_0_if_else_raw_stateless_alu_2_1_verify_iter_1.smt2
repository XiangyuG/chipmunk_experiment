(assert (forall ((pkt_0_3_5_0  Int  )(state_group_0_state_0_4_6_0  Int  )) (let ((_n0 false ))
(let ((_n1 pkt_0_3_5_0 ))
(let ((_n2 (<   _n1   (ite  _n0  1 0) ) ))
(let ((_n3 (not  _n2 ) ))
(let ((_n5 state_group_0_state_0_4_6_0 ))
(let ((_n6 true ))
(let ((_n7 (+   _n5   (ite  _n6  1 0) ) ))
(let ((_n8 (ite (=  _n5  29)  _n5   _n7  ) ))
(let ((_n9 (ite (=  _n5  29)  (ite  _n0  1 0)   _n5  ) ))
(let ((_n10 (ite (=  _n5  29)  _n9   _n5  ) ))
(let ((_n11 (ite (=  _n5  29)  _n10   _n8  ) ))
(let ((_n12 (=   _n7   _n11 ) ))
(let ((_n14 (ite (=  _n5  29)  _n1   (ite  _n0  1 0)  ) ))
(let ((_n15 (ite (=  _n5  29)  (ite  _n6  1 0)   _n1  ) ))
(let ((_n16 (ite (=  _n5  29)  _n15   _n1  ) ))
(let ((_n17 (ite (=  _n5  29)  _n16   _n14  ) ))
(let ((_n18 (=   (ite  _n0  1 0)   _n17 ) ))
(implies  (and (and (>= state_group_0_state_0_4_6_0 0) (< state_group_0_state_0_4_6_0 1024 ))  (and (>= pkt_0_3_5_0 0) (< pkt_0_3_5_0 1024 )) )   (and  _n3  _n12  _n18 )  ))))))))))))))))))))
(check-sat)
(get-model)
(exit)