(assert (forall ((pkt_0_3_5_0  Int  )(state_group_0_state_0_4_6_0  Int  )) (let ((_n0 state_group_0_state_0_4_6_0 ))
(let ((_n1 true ))
(let ((_n2 (ite (=  _n0  0)  (ite  _n1  1 0)   _n0  ) ))
(let ((_n3 (<   _n0   (ite  _n1  1 0) ) ))
(let ((_n4 false ))
(let ((_n5 (ite  _n3   (ite  _n4  1 0)   _n0  ) ))
(let ((_n6 (+   _n5   (ite  _n3  1 0) ) ))
(let ((_n7 (ite (=  (ite  _n3  1 0)  1)  _n6   _n0  ) ))
(let ((_n8 (=   _n7   _n2 ) ))
(let ((_n10 pkt_0_3_5_0 ))
(let ((_n11 (ite (=  _n0  0)  (ite  _n1  1 0)   _n10  ) ))
(let ((_n12 (=   _n0   (ite  _n4  1 0) ) ))
(let ((_n13 (ite (=  _n0  0)  (ite  _n12  1 0)   _n10  ) ))
(let ((_n14 (=   _n13   _n11 ) ))
(implies  (and (and (>= state_group_0_state_0_4_6_0 0) (< state_group_0_state_0_4_6_0 1024 ))  (and (>= pkt_0_3_5_0 0) (< pkt_0_3_5_0 1024 )) )   (and  _n8  _n14 )  )))))))))))))))))
(check-sat)
(get-model)
(exit)