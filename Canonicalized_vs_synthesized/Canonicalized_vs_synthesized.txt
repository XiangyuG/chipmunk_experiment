Note1: No.2 3 7 mutation
Note3: domino grid size XXXXXXXX * XXXXXXXXXX
Note4: verification bit = 10
Note5: 3*(4+1) means 3 stages and (4 stateless_alu + 1 stateful_alu) per stage
Note6: please download chipmunk repo https://github.com/chipmunk-project/chipmunk-tofino
       with commit number d2ea172110c1e7fb800f02d87535865a0dbbb7dd
Note7: set the time limit for hole-elimination as 10 * (the time spent for cex mode)
                     # of mutators   statelfu_alu stateless_alu     grid_size  success_rate_for_iterative_solver   success_rate_for_domino
1.MARPLE_NEW_FLOW
1.1(Optimal)
marple_new_flow.c    10              pred_raw     stateless_alu         2*(2+1)         100%                              Not tested yet
(cmd line: time python3 run_iterative_solver_automatically.py marple_new_flow 10 1 example_alus/stateful_alus/pred_raw.alu example_alus/stateless_alus/stateless_alu.alu 2 2 10 2
time: real    0m56.334s)ok
5.68 + 5.66 + 5.5 + 5.7 + 5.46 + 5.6 + 5.37 + 5.58 + 5.48 + 5.73

1.2 (synthesized allocation for stateless_vars)
marple_new_flow.c    10              pred_raw     stateless_alu         2*(2+1)         100%                              Not tested yet
(cmd line: time python3 run_iterative_solver_with_synthesized_allocation_automatically.py marple_new_flow 10 1 example_alus/stateful_alus/pred_raw.alu example_alus/stateless_alus/stateless_alu.alu 2 2 10 2
time: real    0m59.962s)ok
5.99 + 5.99 + 5.82 + 5.94 + 5.88 + 5.83 + 5.97 + 5.93 + 6.03 + 5.74

1.3(stateless_alu_arith)
marple_new_flow.c    10              pred_raw     stateless_alu_arith         2*(2+1)         0%                              Not tested yet
(cmd line: time python3 run_iterative_solver_automatically.py marple_new_flow 10 1 example_alus/stateful_alus/pred_raw.alu example_alus/stateless_alus/stateless_alu_arith.alu 2 2 10 2
time: real    0m32.381s)ok
3.27 + 3.05 + 3.27 + 3.10 + 3.23 + 3.09 + 3.25 + 3.09 + 3.12 + 3.10

1.4 (hole-elimination mode)
marple_new_flow.c    10              pred_raw     stateless_alu         2*(2+1)         100%                              Not tested yet
(cmd line: 
time: real    0m56.583s)ok
5.55 + 5.51 + 5.43 + 5.88 + 5.61 + 5.62 + 5.62 + 5.38 + 5.62 + 5.54

2.MARPLE_TCP_NMO
2.1 (Optimal)
marple_tcp_nmo.c     10              pred_raw     stateless_alu         3*(2+1)         100%                        Not tested yet
(cmd line: time python3 run_iterative_solver_automatically.py marple_tcp_nmo 10 1 example_alus/stateful_alus/pred_raw.alu example_alus/stateless_alus/stateless_alu.alu 3 2 10 2
time: real    1m13.452s)ok
7.52 + 7.43 + 7.06 + 7.10 + 7.26 + 7.13 + 7.28 + 6.91 + 7.44 + 7.49

2.2 (synthesized allocation for stateless_vars)ok
marple_tcp_nmo.c     10              pred_raw     stateless_alu         3*(2+1)         100%                        Not tested yet
(cmd line: time python3 run_iterative_solver_with_synthesized_allocation_automatically.py marple_tcp_nmo 10 1 example_alus/stateful_alus/pred_raw.alu example_alus/stateless_alus/stateless_alu.alu 3 2 10 2
time: real    1m19.302s)ok
7.92 + 8.21 + 7.85 + 7.89 + 8.00 + 6.96 + 7.59 + 7.93 + 7.80 + 8.32

2.3 (stateless_alu_arith)ok
marple_tcp_nmo.c     10              pred_raw     stateless_alu_arith         3*(2+1)         100%                        Not tested yet
(cmd line: time python3 run_iterative_solver_automatically.py marple_tcp_nmo 10 1 example_alus/stateful_alus/pred_raw.alu example_alus/stateless_alus/stateless_alu_arith.alu 3 2 10 2
time: real    1m7.934s)ok
6.77 + 6.73 + 6.78 + 6.91 + 6.91 + 6.89 + 6.76 + 7.00 + 5.57 + 6.82

2.4 (hole-elimination mode)ok
marple_tcp_nmo.c     10              pred_raw     stateless_alu         3*(2+1)         100%                        Not tested yet
(cmd line: 
time: real    1m13.250s)
7.18 + 7.09 + 7.28 + 7.50 + 7.02 + 7.64 + 7.06 + 7.04 + 7.34 + 7.34

3.SAMPLING
3.1 (optimal)
sampling.c           10            if_else_raw    stateless_alu          2*(1+1)         100%                    Not tested yet
(cmd line: time python3 run_iterative_solver_automatically.py sampling 10 1 example_alus/stateful_alus/if_else_raw.alu example_alus/stateless_alus/stateless_alu.alu 2 1 10 2
time: real    2m51.775s)ok
17.29 + 17.05 + 17.22 + 16.70 + 17.45 + 17.00 + 17.39 + 17.26 + 17.06 + 16.54

3.2 (synthesized allocation for stateless_vars)ok
sampling.c           10            if_else_raw    stateless_alu          2*(1+1)         100%                    Not tested yet
(cmd line: time python3 run_iterative_solver_with_synthesized_allocation_automatically.py sampling 10 1 example_alus/stateful_alus/if_else_raw.alu example_alus/stateless_alus/stateless_alu.alu 2 1 10 2
time: real    2m56.460s)ok
16.69 + 17.32 + 13.07 + 16.70 + 13.30 + 17.21 + 17.40 + 21.19 + 25.31 + 17.44

3.3 (stateless_alu_arith)ok
sampling.c           10            if_else_raw    stateless_alu_arith          2*(1+1)         100%                  Not tested yet
(cmd line: time python3 run_iterative_solver_automatically.py sampling 10 1 example_alus/stateful_alus/if_else_raw.alu example_alus/stateless_alus/stateless_alu_arith.alu 2 1 10 2
time: real    2m38.904s)ok
12.95 + 17.56 + 17.63 + 9.08 + 17.50 + 13.32 + 17.61 + 17.41 + 18.00 + 17.01

3.4 (hole-elimination mode)ok Seting the timeout to be 150
sampling.c           10            if_else_raw    stateless_alu          2*(1+1)         0%                    Not tested yet
(cmd line: time python3 run_iterative_solver_automatically.py sampling 10 1 example_alus/stateful_alus/if_else_raw.alu example_alus/stateless_alus/stateless_alu.alu 2 1 10 2
time: real    )
150.01 + 150.01 + 150.01 + 150.01 + 150.01 + 150.01 + 150.01 + 150.01 + 150.01 + 150.01

4.SNAP_HEAVY_HITTER
4.1 (optimal)
snap_heavy_hitter.c   10             pair          stateless_alu         1*(1+)          100%                         Not run yet
(cmd line: time python3 run_iterative_solver_automatically.py snap_heavy_hitter 10 2 example_alus/stateful_alus/pair.alu example_alus/stateless_alus/stateless_alu.alu 1 1 10 2
time: real    5m58.362s)ok
39.60 + 39.19 + 49.00 + 19.92 + 20.01 + 30.04 + 39.74 + 39.81 + 24.61 + 55.63

4.2 (synthesized allocation for stateless_vars)ok
snap_heavy_hitter.c   10             pair          stateless_alu         1*(1+)          100%                         Not run yet
(cmd line: time python3 run_iterative_solver_with_synthesized_allocation_automatically.py snap_heavy_hitter 10 2 example_alus/stateful_alus/pair.alu example_alus/stateless_alus/stateless_alu.alu 1 1 10 2
time: real    6m23.549s)ok
57.58 + 24.79 + 41.04 + 35.91 + 57.58 + 30.77 + 48.07 + 35.81 + 25.34 + 25.81

4.3 (stateless_alu_arith)
snap_heavy_hitter.c   10             pair          stateless_alu_arith         1*(1+)          100%                         Not run yet
(cmd line: time python3 run_iterative_solver_with_synthesized_allocation_automatically.py snap_heavy_hitter 10 2 example_alus/stateful_alus/pair.alu example_alus/stateless_alus/stateless_alu_arith.alu 1 1 10 2
time: real    5m0.669s)ok
35.57 + 29.69 + 24.89 + 35.53 + 14.58 + 24.83 + 30.29 + 45.24 + 29.78 + 29.44

4.4 (hole-elimination mode)ok Seting the timeout to be 350
snap_heavy_hitter.c   10             pair          stateless_alu         1*(1+)          0%                         Not run yet
(cmd line: 
time: real    58m20.806s)ok
350.01 + 350.01 + 350.01 + 350.01 + 350.01 + 350.01 + 350.01 + 350.01 + 350.01 + 350.01

5.SPAM_DETECTION
5.1 (optimal)ok
spam_detection.c      10             pair          stateless_alu         1*(1+)          100%                         Not run yet
(cmd line: time python3 run_iterative_solver_automatically.py spam_detection 10 2 example_alus/stateful_alus/pair.alu example_alus/stateless_alus/stateless_alu.alu 1 1 10 2
time: real    5m10.072s)ok
41.94 + 20.85 + 20.33 + 26.26 + 36.80 + 26.24 + 31.66 + 25.67 + 47.34 + 32.11

5.2 (synthesized allocation for stateless_vars)ok
spam_detection.c      10             pair          stateless_alu         1*(1+)          100%                         Not run yet
(cmd line: time python3 run_iterative_solver_with_synthesized_allocation_automatically.py spam_detection 10 2 example_alus/stateful_alus/pair.alu example_alus/stateless_alus/stateless_alu.alu 1 1 10 2
time: real    5m19.357s)ok
42.21 + 35.70 + 30.40 + 25.05 + 29.87 + 25.24 + 31.13 + 31.07 + 47.85 + 20.01 

5.3 (stateless_alu_arith)
spam_detection.c      10             pair          stateless_alu_arith         1*(1+)          100%                         Not run yet
(cmd line: time python3 run_iterative_solver_with_synthesized_allocation_automatically.py spam_detection 10 2 example_alus/stateful_alus/pair.alu example_alus/stateless_alus/stateless_alu_arith.alu 1 1 10 2
time: real    5m23.911s)ok
41.07 + 34.91 + 41.31 + 36.10 + 29.70 + 36.16 + 19.34 + 34.56 + 24.54 + 25.4

5.1 (hole-elimination mode)ok Seting the timeout to be 310)
spam_detection.c      10             pair          stateless_alu         1*(1+)          100%                         Not run yet
(cmd line: time python3 run_iterative_solver_automatically.py spam_detection 10 2 example_alus/stateful_alus/pair.alu example_alus/stateless_alus/stateless_alu.alu 1 1 10 2
time: real    )

6.LEARN_FILTER
6.1 (optimal)ok
learn_filter.c       10              raw          stateless_alu          5*(3+3)         100%                   Not tested yet
(cmd line: python3 run_iterative_solver_automatically.py learn_filter 10 1 example_alus/stateful_alus/raw.alu example_alus/stateless_alus/stateless_alu.alu 5 3 10 2
time: real    19m55.35s)ok
125.28 + 119.55 + 134.08 + 149.18 + 94.87 + 105.42 + 103.45 + 124.77 + 125.97 + 112.78

6.2 (synthesized allocation for stateless_vars)ok
learn_filter.c       10              raw          stateless_alu          5*(3+3)         100%                   Not tested yet
(cmd line: python3 run_iterative_solver_with_synthesized_allocation_automatically.py learn_filter 10 1 example_alus/stateful_alus/raw.alu example_alus/stateless_alus/stateless_alu.alu 5 3 10 2
time: real    139m45.254s)ok
943.4 + 811.35 + 792.89 + 679.21 + 905.35 + 809.04 + 855.68 + 923.29 + 780.47 + 883.77

6.3 (stateless_alu_arith)
learn_filter.c       10              raw          stateless_alu_arith          5*(3+3)    0%                   Not tested yet
(cmd line: python3 run_iterative_solver_automatically.py learn_filter 10 1 example_alus/stateful_alus/raw.alu example_alus/stateless_alus/stateless_alu_arith.alu 5 3 10 2
time: real    )
Set timeout to be 1500 seconds
1500.03 + 1500.00 + 1500.00 + 1500.00 + 1500.00 + 1500.00 + 1500.00 + 1500.00 + 1500.00 + 1500.00

7.BLUE_INCREASE
7.1 (optimal)
blue_increase.c      10              pred_raw     stateless_alu          4*(2+1)          100%                         Not run yet
(cmd line: time python3 run_iterative_solver_automatically.py blue_increase 10 1 example_alus/stateful_alus/pred_raw.alu example_alus/stateless_alus/stateless_alu.alu 4 2 10 2
time: real    71m22.6s)ok
519.21 + 247.71 + 238.50 + 335.09 + 798.75 + 173.8 + 476.13 + 334.85 + 815.41 + 342.54

7.2 (synthesized allocation for stateless_vars)
blue_increase.c      10              pred_raw     stateless_alu          4*(2+1)          100%                         Not run yet
(cmd line: time python3 run_iterative_solver_with_synthesized_allocation_automatically.py blue_increase 10 1 example_alus/stateful_alus/pred_raw.alu example_alus/stateless_alus/stateless_alu.alu 4 2 10 2
time: real    99m25.587s)ok
824.63 + 343.65 + 136.60 + 1775.81 + 127.93 + 370.4 + 668.11 + 116.84 + 759.02 + 841.79

7.3 (stateless_alu_arith)
blue_increase.c      10              pred_raw     stateless_alu_arith          4*(2+1)     100%                         Not run yet
(cmd line: time python3 run_iterative_solver_automatically.py blue_increase 10 1 example_alus/stateful_alus/pred_raw.alu example_alus/stateless_alus/stateless_alu_arith.alu 4 2 10 2
time: real    31m53.996s)ok
206.28 + 84.51 + 113.07 + 55.73 + 136.78 + 546.98 + 124.59 + 124.65 + 225.34 + 295.24
