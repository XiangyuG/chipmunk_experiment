/* 
// Original program: 
struct Packet{
    int pkt_0;
    int pkt_1;
    int pkt_2;
};
int state_group_0_state_0 = 0;
int state_group_1_state_0 = 0;
void func(struct Packet p){
if (0==1) {state_group_0_state_0=0-state_group_0_state_0;

;}
state_group_0_state_0=state_group_0_state_0+1-1;
state_group_1_state_0=state_group_1_state_0+1-1;
p.pkt_0=p.pkt_0+1-1;
p.pkt_1=p.pkt_1+1-1;
p.pkt_2=p.pkt_2+1-1;
if (0==1&&1==1) {state_group_0_state_0=0-state_group_0_state_0;

;}
p.pkt_1=state_group_0_state_0;
p.pkt_2=state_group_1_state_0;
p.pkt_1=p.pkt_1+1-1;
p.pkt_2=p.pkt_2+1-1;
p.pkt_0=p.pkt_0+1-1;
p.pkt_1=p.pkt_1+1-1;
p.pkt_2=p.pkt_2+1-1;
p.pkt_0=p.pkt_0+1-1;
p.pkt_1=p.pkt_1+1-1;
p.pkt_2=p.pkt_2+1-1;
p.pkt_0=p.pkt_0+1-1;
if (p.pkt_0<p.pkt_2&&1==1) {p.pkt_1=p.pkt_1+1;

;}else {p.pkt_2=p.pkt_0;

;}
state_group_0_state_0=p.pkt_1;
state_group_1_state_0=p.pkt_2;
} */

|StateAndPacket| program (|StateAndPacket| state_and_packet) {
if (0==1) {state_and_packet.state_group_0_state_0=0-state_and_packet.state_group_0_state_0;

;}
state_and_packet.state_group_0_state_0=state_and_packet.state_group_0_state_0+1-1;
state_and_packet.state_group_1_state_0=state_and_packet.state_group_1_state_0+1-1;
state_and_packet.pkt_0=state_and_packet.pkt_0+1-1;
state_and_packet.pkt_1=state_and_packet.pkt_1+1-1;
state_and_packet.pkt_2=state_and_packet.pkt_2+1-1;
if (0==1&&1==1) {state_and_packet.state_group_0_state_0=0-state_and_packet.state_group_0_state_0;

;}
state_and_packet.pkt_1=state_and_packet.state_group_0_state_0;
state_and_packet.pkt_2=state_and_packet.state_group_1_state_0;
state_and_packet.pkt_1=state_and_packet.pkt_1+1-1;
state_and_packet.pkt_2=state_and_packet.pkt_2+1-1;
state_and_packet.pkt_0=state_and_packet.pkt_0+1-1;
state_and_packet.pkt_1=state_and_packet.pkt_1+1-1;
state_and_packet.pkt_2=state_and_packet.pkt_2+1-1;
state_and_packet.pkt_0=state_and_packet.pkt_0+1-1;
state_and_packet.pkt_1=state_and_packet.pkt_1+1-1;
state_and_packet.pkt_2=state_and_packet.pkt_2+1-1;
state_and_packet.pkt_0=state_and_packet.pkt_0+1-1;
if (state_and_packet.pkt_0<state_and_packet.pkt_2&&1==1) {state_and_packet.pkt_1=state_and_packet.pkt_1+1;

;}else {state_and_packet.pkt_2=state_and_packet.pkt_0;

;}
state_and_packet.state_group_0_state_0=state_and_packet.pkt_1;
state_and_packet.state_group_1_state_0=state_and_packet.pkt_2;
  return state_and_packet;
}